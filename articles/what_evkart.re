
= EVカートとは何か?
EVカートはCQ出版社から発売されている購入者自身で組み立て可能なカートです。
下記リンクのカート本体とモーター・インバーターを組み合わせることで走行可能なカートを製作できます。

 * カート本体@<br>{}
   - @<href>{https://shop.cqpub.co.jp/hanbai/books/I/I000255.html}

 * ブラシレス・モーター & インバーター・キットセット@<br>{}
   - @<href>{https://shop.cqpub.co.jp/hanbai/books/I/I000055.htm}


特徴をいくつかピックアップします。

 * モーターを手巻きし、走行目的にあったモーターを自作できる。

 * モーター制御CPUのソフトウェアが開発できる。


== 構成
EVカートは以降に示す要素で構成されています。
本章で示す構成はEVカート購入時のデフォルト構成です。

@<img>{default_evkart_block}はデフォルト構成のブロック図です。
//image[default_evkart_block][デフォルト構成のブロック図]{
//}


モデルベース開発は@<chapref>{mbd_change_point}に記載している内容にハードウェア、ソフトウェアを変更しています。


=== インバーター基板
EVカートは2枚の基板で構成されています。

インバーター基板はモーターを駆動する3相インバーター回路が実装されています。

@<img>{driver_pcb}はインバーター基板の写真です。
//image[driver_pcb][インバーター基板]{
//}

ブラシレスモーターを駆動するためには、3相インバーター回路のFETをモーターの位置に合わせて適切に通電する必要があります。
この通電制御を行うのが後述するCPU基板です。

//embed[latex]{
\clearpage
//}
=== CPU基板
CPU基板はインバーター基板のピンヘッダに挿して使います。

@<img>{cpu_pcb}はCPU基板の写真です。
//image[cpu_pcb][CPU基板]{
//}

CPU基板にはルネサス エレクトロニクス社製CPU V850ES/FG3 uPD70F3374が実装されています。
このCPUでモーター制御します。


=== ブラシレスモーター
CQ EVカートのモーターは直流ブラシレスモーターです。
モーターは手巻きし、走行目的に合った特性をもつモーターをつくれます。

@<img>{motor_overall}はブラシレスモーターの写真です。
//image[motor_overall][ブラシレスモーターの全体]{
//}

ブラシレスモーターに3相の信号線、ホールセンサーの信号線が接続されています。


=== ホールセンサー
ブラシレスモーターの磁極を検出するセンサーです。

CPUはホールセンサーでモーターの現在位置を把握し、FETを適切に通電制御します。

@<img>{motor}はブラシレスモーターを近くから撮影した写真です。
//image[motor][ブラシレスモーターを近くから撮影]{
//}

扇形の小さい基板の裏にホールセンサーが3つ取り付けられています。
このホールセンサー基板はN極を検出するとLowレベル（0）、S極を検出するとHighレベル（1）を出力します。


=== スロットル
EVカートのハンドル右手側にはスロットルが付いています。
このスロットルの開閉でカートの速度調整が可能です。
アナログ電圧0〜5Vがインバーター基板・CPU基板に供給されています。
CPU基板はアナログ電圧をAD変換し電圧値からスロットル開閉度を決めています。


== 開発環境
EVカートのソフトウェア開発環境は次のとおりです。
すべてルネサス エレクトロニクス社製のハードウェア、ツールです。

 * 統合開発環境 CS+@<br>{}
   - コンパイル、デバッグが行える統合開発環境ツール

 * Applilet2 for V850ES Fx3@<br>{}
   - マイコン周辺機能をGUIで設定しソースコードを自動生成するツール

 * E1@<br>{}
   - エミュレータ。CS+と組み合わせて使うとCPUのデバッグができる。

 * Renesas Flash Programmer@<br>{}
   - プログラム書き込みツール
　

== 制御方法
@<img>{HallandPWMControl}はモーター制御のタイミングチャートです。
ホールセンサーとFET通電ステージの制御タイミングを書いています。
//image[HallandPWMControl][モーター制御のタイミングチャート]{
//}

CPU基板はこのタイミングでFETを通電・制御します。その結果モーターが回転します。

通電ステージ1→6方向に制御するとモーターは時計回り方向（CW方向）に回ります。
反対に通電ステージ6→1方向に制御するとモーターは反時計回り方向（CCW方向）に回ります。

CPU基板は@<img>{HallandPWMControl}の点線ホールセンサーの立上り、立ち下がりエッジを検出したら、
通電ステージによりHigh側FET・Low側FETに@<img>{HallandPWMControl}の通電パターンを設定します。

High側FETの塗りつぶしの期間でPWM制御を行います。
PWM制御はパルス波形のON幅を長く・短くしたりする制御でモーター制御でよく使われている技術です。
PWM制御のON幅はスロットルの開度で決めています。
スロットル開度に応じてPWM制御のON幅を長く・短くすることによりモーター回転数を変更しています。

@<table>{hallpattern_fet_stage_table}はホールセンサー信号とFET通電ステージの設定パターンをまとめた表です。
//table[hallpattern_fet_stage_table][ホールセンサー信号とFET通電ステージ設定パターン]{ 
通電ステージ	Hall W	Hall V	Hall U	UH	VH	WH	UL	VL	WL
------------------------------------------------------------------------
1			   1		0		1		PWM	0	0	0	1	0
2			   0		0		1		PWM	0	0	0	0	1
3			   0		1		1		0	PWM	0	0	0	1
4			   0		1		0		0	PWM	0	1	0	0
5			   1		1		0		0	0	PWM	1	0	0
6			   1		0		0		0	0	PWM	0	1	0
//}

今回利用しているブラシレスモーターの制御方法は「120度通電制御」です。@<br>{}
このリンク「@<href>{https://www.renesas.com/jp/ja/support/technical-resources/engineer-school/brushless-dc-motor-02-inverter-pmw.html,ルネサス エレクトロニクス株式会社}」は
ブラシレスモーターの制御がアニメーションでわかりやすく説明されているのでお勧めです。
本書のブラシレスモーター制御はページ中ほどの図3です。
